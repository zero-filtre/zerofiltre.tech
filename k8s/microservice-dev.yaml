apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: zerofiltretech-dev
  name: zerofiltretech-dev
spec:
  minReadySeconds: 30
  progressDeadlineSeconds: 120
  replicas: 1
  selector:
    matchLabels:
      app: zerofiltretech-dev
  template:
    metadata:
      labels:
        app: zerofiltretech-dev
    spec:
      containers:
        - name: zerofiltretech-dev
          image: imzerofiltre/zerofiltretech:0.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  namespace: zerofiltretech-dev
  name: zerofiltretech-dev
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: zerofiltretech-dev
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: zerofiltretech-dev
  namespace: zerofiltretech-dev
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    # add an annotation indicating the issuer to use.
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
    - host: "dev.services.zerofiltre.tech"
      http:
        paths:
          - path: /
            backend:
              serviceName: zerofiltretech-dev
              servicePort: 80
  tls: # < placing a host in the TLS config will indicate a certificate should be created
    - hosts:
        - "dev.services.zerofiltre.tech"
      secretName: zerofiltre-ingress-cert # < cert-manager will store the created certificate in this secret.
